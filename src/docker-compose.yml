---
version: "3.7"

## DSL Config
x-influxlog: &syslog
  logging:
    driver: syslog
    options:
      #syslog-address: "udp://{{.Node.Hostname}}:6154"
      #syslog-address: "udp://{{.Swarm.NodeAddr}}:6154"
      syslog-address: "udp://127.0.0.1:6154"
      syslog-format: rfc5424micro
      tag: "{{.ImageName}}/{{.Name}}/{{.ID}}"

x-replicas: &replicated
  replicas: 1

x-global: &global
  mode: global

x-worker: &worker
  placement:
    constraints: [node.role == worker]

x-manager: &manager
  placement:
    constraints: [node.role == manager]

x-restart: &on-failure
  restart_policy:
    condition: on-failure
    max_attempts: 3
    delay: 5s

  rollback_config:
    parallelism: 2
    delay: 10s
    monitor: 10s
    order: start-first
    failure_action: continue

  update_config:
    parallelism: 2
    delay: 10s
    monitor: 10s
    order: start-first
    failure_action: rollback

x-stop-grace: &stopperiod
  stop_grace_period: 30s

x-default-healthcheck: &heathcheck-pass
  test: ["CMD", "exit 0"]
  interval: 25s
  timeout: 5s
  retries: 3

x-traefik-off: &traefik-off
  traefik.enabled: "false"

x-traefik-on: &traefik-on
  traefik.enabled: "true"
  traefik.frontend.errors.network.backend: "error"
  traefik.frontend.errors.network.query: "/"
  traefik.frontend.errors.network.status: "404,500-511"
  traefik.frontned.entrypoints: 'http,https,ws,wss'
  traefik.frontend.priority: "5"
  traefik.port: "80"

x-default-route: &default-route
  <<: *traefik-on
  traefik.frontend.rule: "HostRegexp:{catchall:.*}"
  traefik.frontend.priority: "1"

x-vhost-route: &vhost-route
  <<: *traefik-on
  traefik.frontend.priority: "10"

x-orbiter-disable: &orbiter-off
  orbiter: "false"
  <<: *traefik-off

x-orbiter-enable: &orbiter-on
  orbiter: "true"
  orbiter.up: "3"
  orbiter.down: "1"
  <<: *traefik-on

  
# the following are presented as generally accepted
# values. In the case of personal certificates GN=, SN= or pseudonym=
# can appear in the fields
# C = ISO3166 two character country code
# ST = state or province
# L = Locality; generally means city
# O = Organization - Company Name
# OU = Organization Unit - division or unit
# CN = CommonName - end entity name e.g. www.example.com
# net.matrix.environment := <"undercloud"|"nonprod"|"prod"|"stage">

x-cmdb-matrix: &cmdb
   net.matrix.orgunit: "Infrastructure"
   net.matrix.organization: "Dallas Makerspace"
   net.matrix.commonname: "edgesec"
   net.matrix.locality: "Dallas"
   net.matrix.state: "Texas"
   net.matrix.country: "USA"
   net.matrix.environment: "undercloud"
   net.matrix.application: "infrastructure"
   net.matrix.role: "edge security appliance"
   net.matrix.owner: "FC13F74B@matrix.net"
   net.matrix.customer: "PVT-01"
   net.matrix.costcenter: "INT-01"
   net.matrix.oid: "iso.org.dod.internet.private.enterprise.42387"
   net.matrix.duns: "iso.org.duns.039271257"
   net.matrix.architecture: "armhf"

networks:

  internal:
    external: true
    name: internal

  default:
    external: true
    name: public

volumes:
  pihole-conf: {}
  pihole-dns: {}
  portainer_data: {}

# More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/
services:
  pihole:
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "80:80/tcp"
      - "443:443/tcp"
    environment:
      TZ: 'ETC/UTF'
      WEBPASSWORD: 'SecurityIsCool'
    # Volumes store your data between container upgrades
    volumes:
      - pihole-conf:/etc/pihole/
      - pihole-dns:/etc/dnsmasq.d/
    dns:
      - 127.0.0.1
      - 1.1.1.1
      - 1.0.0.1
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    deploy:
      <<: *on-failure
      <<: *global
      <<: *manager
      labels:
        <<: *orbiter-off
        <<: *cmdb
        net.matrix.application: 'dns server'
    image: 'pihole/pihole:latest'
 
  shepherd:
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # /root/.docker/config.json:/root/.docker/config.json:ro
    environment:
      TZ: 'ETC/UTF'
      SLEEP_TIME: "5m"
      BLACKLIST_SERVICES: "shepherd autoscale traefik agent systemprune"
      WITH_REGISTRY_AUTH: "true"
      DOCKER_HOST: "unix:///var/run/docker.sock"
    deploy:
      <<: *on-failure
      <<: *global
      <<: *manager
      labels:
        <<: *orbiter-off
        <<: *cmdb
        net.matrix.application: 'auto updater'

    image: 'mazzolino/shepherd:latest'

  systemprune:
    environment:
      TZ: 'ETC/UTF'
    deploy:
      <<: *global
      restart_policy:
        condition: any
        delay: 72h
      <<: *on-failure
      labels:
        <<: *orbiter-off
        <<: *cmdb
        net.matrix.application: 'auto cleaner'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    image: docker:dind
    command: system prune -af --filter "until=24h" --filter="label!=net.matrix.application==infrastructure"

  admin:
    environment:
      TZ: 'ETC/UTF'
    deploy:
      <<: *global
      <<: *on-failure
    ports:
      - '9000:9000/tcp'
    labels:
        <<: *orbiter-off
        <<: *cmdb
        net.matrix.application: 'swarm admin ui'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    image: 'portainer/portainer:latest'
    command: |
      -H unix:///var/run/docker.sock --no-auth

...
# vim: set sts=2 sw=2 ts=2 et ai:
